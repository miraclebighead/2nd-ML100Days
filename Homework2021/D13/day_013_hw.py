# -*- coding: utf-8 -*-
"""Day_013_HW.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nLXxlDZa9Mq0P31YkHSIA3COCdik24uD

# 常用的 DataFrame 操作
* merge / transform
* subset
* groupby

# [作業目標]
- 練習填入對應的欄位資料或公式, 完成題目的要求

# [作業重點]
- 填入適當的輸入資料, 讓後面的程式顯示題目要求的結果 (Hint: 填入對應區間或欄位即可, In[4]~In[6], Out[4]~In[6])
- 填入z轉換的計算方式, 完成轉換後的數值 (Hint: 參照標準化公式, In[7])
"""

# Commented out IPython magic to ensure Python compatibility.
# Import 需要的套件
import os
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# %matplotlib inline

# 設定 data_path
dir_data = './'

f_app = os.path.join(dir_data, 'application_train.csv')
print('Path of read in data: %s' % (f_app))
app_train = pd.read_csv(f_app)
app_train.head()

"""## 作業
1. 請將 app_train 中的 CNT_CHILDREN 依照下列規則分為四組，並將其結果在原本的 dataframe 命名為 CNT_CHILDREN_GROUP
    * 0 個小孩
    * 有 1 - 2 個小孩
    * 有 3 - 5 個小孩
    * 有超過 5 個小孩

2. 請根據 CNT_CHILDREN_GROUP 以及 TARGET，列出各組的平均 AMT_INCOME_TOTAL，並繪製 baxplot
3. 請根據 CNT_CHILDREN_GROUP 以及 TARGET，對 AMT_INCOME_TOTAL 計算 [Z 轉換](https://en.wikipedia.org/wiki/Standard_score) 後的分數
"""

#1
"""
Your code here
"""
cut_rule = [0, 1, 3, 6, float('inf')]

app_train['CNT_CHILDREN_GROUP'] = pd.cut(app_train['CNT_CHILDREN'].values, \
                                         bins=cut_rule, \
                                         include_lowest=True, \
                                        )
                                         # labels=["0 個小孩", "1-2 個小孩", "3-5 個小孩", "超過 5 個小孩"])
app_train['CNT_CHILDREN_GROUP'].value_counts()

#2-1
"""
Your code here
"""
grp = ['CNT_CHILDREN_GROUP', 'TARGET']

grouped_df = app_train.groupby(grp, observed = True)['AMT_INCOME_TOTAL']
grouped_df.mean()

#2-2
"""
Your code here
"""
plt_column = ['AMT_INCOME_TOTAL']
plt_by = ['CNT_CHILDREN_GROUP', 'TARGET']

app_train.boxplot(column=plt_column, by = plt_by, showfliers = False, figsize=(12,12))
plt.title('Income Distribution by CNT_CHILDREN_GROUP and TARGET')
plt.suptitle('')  # 移除多餘標題
plt.xticks(rotation=45)  # x 軸標籤旋轉 45 度，避免重疊
plt.xlabel('CNT_CHILDREN_GROUP & TARGET')
plt.ylabel('AMT_INCOME_TOTAL')
plt.tight_layout()
plt.show()

#3
"""
Your code here
"""
grouped_df = app_train.groupby(['CNT_CHILDREN_GROUP', 'TARGET'], observed = True)['AMT_INCOME_TOTAL']

# app_train['AMT_INCOME_TOTAL_Z_BY_CHILDREN_GRP-TARGET'] = grouped_df.apply(lambda x: (x - x.mean())/ x.std())
app_train['AMT_INCOME_TOTAL_Z_BY_CHILDREN_GRP-TARGET'] = grouped_df.transform(lambda x: (x - x.mean())/ x.std())

app_train[['AMT_INCOME_TOTAL','AMT_INCOME_TOTAL_Z_BY_CHILDREN_GRP-TARGET']].head()

grouped_df = app_train.groupby(['CNT_CHILDREN_GROUP', 'TARGET'], observed = True)['AMT_INCOME_TOTAL']

grouped_df.apply(lambda x: (x - x.mean())/ x.std())

